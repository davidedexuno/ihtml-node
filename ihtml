#!/usr/bin/env node

(async () => {
  // const fs = require('fs')
  const path = require('path')
  const Getopt = require('node-getopt')
  const http = require('http')
  const iHTML = require('./src/iHTML')

  const opt = new Getopt([
    ['r', '', 'CCS code to execute'],
    ['o', '', 'Output (file or dir for projects)'],
    ['p', 'project=ARG', 'Project mode. Indicates project dir (current on empty)'],
    ['s', '', 'Server mode. Indicates port (`1337` on empty)'],
    ['', 'server[=PORT]', 'Server mode. Indicates port (`1337` on empty)'],
    ['t', '', 'Static dir'],
    ['h', 'help', 'display this help'],
    ['v', 'version', 'show version']
  ])
    .bindHelp()
    .parseSystem()

  console.info({ argv: opt.argv, options: opt.options })

  if (opt.options.s) {
    let project = opt.options.p ?? __dirname
    // const staticDir = opt.options.t ?? __dirname
    const port = opt.options.s === true || opt.options.server === true ? 1337 : opt.options.s || opt.options.server
    project = new iHTML.Project.Project(project)
    console.log('Available paths:', '')
    project.getTemplates().forEach(template =>
      console.log(`  http://127.0.0.1:${port}/${template.output}`))
    console.log('\n--\n')
    http.createServer(function (request, res) {
      let template
      if ((template = project.getTemplates().find(template => '/' + template.output === request.url))) {
        const document = new iHTML.Document.Document(path.resolve(project.getRoot(), template.html))
        // ccs = new iHTML.Ccs.Ccs(  path.resolve(project.getRoot(), template.apply)  );
        // ccs.applyTo(document);
        const body = document.render()
        console.log(`Rendered http://127.0.0.1:${port}${request.url}`)
        res.writeHead(200, { 'Content-Type': 'text/html' }); res.write(body); res.end(); return
      }
      console.log(`Rendered http://127.0.0.1:${port}${request.url}`)
      res.writeHead(404, { 'Content-Type': 'text/plain' }); res.write('404 - Page not found\n'); res.end()
    }).listen(port)
  } else if (opt.options.p) {
    console.log('TODO')
  } else if (opt.argv[0] && opt.argv[0]) {
    console.log('TODO')
  } else if (opt.argv[0] && opt.options.r) {
    console.log('TODO')
  } else if (opt.argv[0]) {
    console.log('TODO')
  }
})()
